swagger: '2.0'
info:
  description: "This module contains a collection of YANG definitions for the configuration and identification of some common system properties within a device containing a NETCONF server.  This includes data node definitions for system identification, time-of-day management, user management, DNS resolver configuration, and some protocol operations for system management. Copyright (c) 2014 IETF Trust and the persons identified as authors of the code.  All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info). This version of this YANG module is part of RFC 7317; see the RFC itself for full legal notices."
  version: 0.0.1
  title: ietf-system@2014-08-06
  contact:
    name: API Support
    email: apiteam@swagger.io
    url: 'https://github.com/Redocly/redoc'
host: 172.20.0.1
basePath: /restconf/data
tags:
  - name: system
    description: System group configuration.
  - name: DNS-resolver
    description: Access to Petstore orders
  - name: user
    description: Operations about user
schemes:
  - https
paths:
  '/ietf-system:system/contact':
    get:
      tags:
        - system
      summary: Contact
      description: The administrator contact information for the system. A server implementation MAY map this leaf to the sysContact MIB object.  Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and sysContact.  The definition of such a mechanism is outside the scope of this document.
      operationId: getContact
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              Contact:
                type: string
          examples:
            Example:
              'ietf-system:system':
                contact: This new contact.
          headers: {}
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              errors:
                type: array
                items: {}
          examples:
            application/json:
              'ietf-restconf:errors':
                error:
                  error-type: application
                  error-tag: invalid-value
                  error-message: Restconf Message is not valid
      security: []
      parameters: []
  '/ietf-system:system/hostname':
    get:
      tags:
        - system
      summary: Hostname
      description: The name of the host.  This name can be a single domain label or the fully qualified domain name of the host.
      operationId: getHostname
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              hostname:
                type: string
                format: 'inet:domain-name'
          examples:
            Example:
              'ietf-system:system':
                hostname: Switch
  '/ietf-system:system/location':
    get:
      tags:
        - system
      summary: Location
      description: The system location. A server implementation MAY map this leaf to the sysLocation MIB object.  Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and sysLocation.  The definition of such a mechanism is outside the scope of this document.
      operationId: getLocation
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              location:
                type: string
          examples:
            application/json:
              'ietf-system:system':
                location: New Location
  '/ietf-system:system/dns-resolver/options/timeout':
    get:
      tags:
        - DNS-resolver
      summary: timeout
      description: The amount of time the resolver will wait for a response from each remote name server before retrying the query via a different name server.
      operationId: getDnsTimeout
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              timeout:
                type: integer
                format: uint8
                minimum: 0
                maximum: 255
                default: '5'
          examples:
            application/json:
              'ietf-system:system':
                dns-resolver:
                  options:
                    timeout: '3'
  '/ietf-system:system/dns-resolver/options/attempts':
    get:
      tags:
        - DNS-resolver
      summary: attempts
      description: The number of times the resolver will send a query to all of its name servers before giving up and returning an error to the calling application.
      operationId: getDnsAttempts
      responses:
        '200':
          description: successful operation
          schema:
            properties:
              attmepts:
                type: integer
                format: uint8
                minimum: 0
                maximum: 255
                default: '2'
          examples:
            application/json:
              'ietf-system:system':
                dns-resolver:
                  options:
                    attmepts: '2'
  '/ietf-system:system/dns-resolver/options':
    get:
      tags:
        - DNS-resolver
      summary: Get DNS options
      description: Resolver options. The set of available options has been limited to those that are generally available across different resolver implementations and generally useful.
      operationId: getDnsOptions
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              options:
                type: object
                properties:
                  timeout:
                    type: integer
                    format: uint8
                    default: 5
                    example: 3
                    minimum: 0
                    maximum: 255
                  attempts:
                    type: integer
                    format: uint8
                    default: 2
                    example: 2
                    minimum: 0
                    maximum: 255
          examples:
            application/json:
              'ietf-system:system':
                dns-resolver:
                  options:
                    timeout: '3'
                    attempts: '2'
    put:
      tags:
        - DNS-resolver
      summary: Put DNS options
      description: Update DNS options
      operationId: putDnsOptions
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
      parameters:
        - in: body
          name: body
          schema:
            type: object
          description: ''
    parameters: []
  '/ietf-system:system/dns-resolver/server={serverpath}/name':
    get:
      tags:
        - DNS-resolver
      summary: Find server name
      description: return server name
      operationId: getServerName
      parameters:
        - name: serverpath
          in: path
          description: server name to return
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              name:
                type: string
          examples:
            application/json:
              'ietf-system:system':
                dns-resolver:
                  server:
                    name: 10.243.16.11
    parameters: []
  '/ietf-system:system/dns-resolver/server={serverpath}/udp-and-tcp':
    get:
      tags:
        - DNS-resolver
      summary: Find server udp-and-tcp info
      description: return server udp-and-tcp
      operationId: getServerUdpTcpAddress
      parameters:
        - name: serverpath
          in: path
          description: server name to return
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              udp-and-tcp:
                type: object
                properties:
                  address:
                    type: string
                    format: inet:ip-address
                  port:
                    type: integer
                    format: inet:port-number
                    default: 53
                    x-deprecated: true
          examples:
            application/json:
              'ietf-system:system':
                dns-resolver:
                  server:
                    name: 10.243.16.11
                    udp-and-tcp:
                      address: 10.243.16.11
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  error-type:
                    type: string
                  error-tag:
                    type: string
                  error-message:
                    type: string
          examples:
            application/json:
              'ietf-restconf:errors':
                error:
                  error-type: application
                  error-tag: invalid-value
                  error-message: Restconf Message is not valid
  '/ietf-system:system/dns-resolver/server={serverpath}/udp-and-tcp/address':
     get:
      tags:
        - DNS-resolver
      summary: Find server udp-and-tcp address
      description: return server udp-and-tcp
      operationId: getServerUdpTcp
      parameters:
        - name: serverpath
          in: path
          description: server name to return
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              udp-and-tcp:
                type: object
                properties:
                  address:
                    type: string
                    format: inet:ip-address
                  port:
                    type: integer
                    format: inet:port-number
                    default: 53
                    x-deprecated: true
          examples:
            application/json:
              'ietf-system:system':
                dns-resolver:
                  server:
                    name: 10.243.16.11
                    udp-and-tcp:
                      address: 10.243.16.11
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  error-type:
                    type: string
                  error-tag:
                    type: string
                  error-message:
                    type: string
securityDefinitions: {}
produces:
  - application/json
consumes:
  - application/json
