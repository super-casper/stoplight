swagger: '2.0'
info:
  version: 1.0.0
  title: ietf-interfaces
  description: any operations on interfaces
schemes: 
- https
host: 172.20.0.83
basePath: /restconf/data
tags: 
- name: "ietf-interfaces"
  description: "Everything about ietf-interface"
- name: "ietf-interfaces-state"
  description: "Everything about ietf-interface-state"  
paths:
  /ietf-interfaces:interfaces:
    get:
      tags:
      - ietf-interfaces
      summary: "Container"
      description: "Interface parameters."
      operationId: "getInterfaces"
      produces:
      - application/json
      responses:
        200:
          description: "OK, Ignore the response"
        400:
          description: "Bad Request"
    put:
      tags: 
      - ietf-interfaces
      summary: "Container"
      description: "Interface parameters." 
      operationId: "putInterface"
      consumes:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
          properties:
            interface:
              $ref: '#/definitions/interface_put'
      responses:
        200:
          description: OK
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces/{interface}:
    get:
      tags: 
      - ietf-interfaces
      summary: "List" 
      description: "The list of configured interfaces on the device.\nThe operational state of an interface is available in the /interfaces-state/interface list.  If the configuration of a system-controlled interface cannot be used by the system (e.g., the interface hardware present does not match the interface type), then the configuration is not applied to the system-controlled interface shown in the /interfaces-state/interface list.  If the configuration of a user-controlled interface cannot be used by the system, the configured interface is not instantiated in the /interfaces-state/interface list."
      operationId: "getInterface"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      type:
                        $ref: '#/definitions/type'
                      enable:
                        $ref: '#/definitions/bool_t'
                      link-up-down-trap-enable:
                        $ref: '#/definitions/link-up-down-trap-enable'
                      ietf-ip-ipv4:
                        $ref: '#/definitions/ietf-ip-ipv4'
                      ietf-ip-ipv6:
                        $ref: '#/definitions/ietf-ip-ipv6'
    put:
      tags:
      - ietf-interfaces
      summary: "List" 
      description: "A server implementation MAY map this leaf to the ifAlias MIB object.  Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and ifAlias.The definition of such a mechanism is outside the scope of this document.\nSince ifAlias is defined to be stored in non-volatile storage, the MIB implementation MUST map ifAlias to the value of 'description' in the persistently stored configuration."
      consumes:
      - "application/json"
      parameters:
      - $ref: '#/parameters/interface'
      - name: "body"
        in: "body"
        required: true
        schema:
          type: "object"
          properties:
            description:
              type: "string"
              example: This is interface0/1
      responses:
        200:
          description: OK
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces/{interface}/name:
    get:
      tags:
      - ietf-interfaces
      summary: "Leaf"
      description: "The 'config false' list /interfaces-state/interface contains the currently existing interfaces on the device.\nIf a client tries to create configuration for a system-controlled interface that is not present in the /interfaces-state/interface list, the server MAY reject the request if the implementation does not support pre-provisioning of interfaces or if the name refers to an interface that can never exist in the system.  A NETCONF server MUST reply with an rpc-error with the error-tag 'invalid-value' in this case.\nIf the device supports pre-provisioning of interface configuration, the 'pre-provisioning' feature is advertised.\nIf the device allows arbitrarily named user-controlled interfaces, the 'arbitrary-names' feature is advertised.\n\nWhen a configured user-controlled interface is created by the system, it is instantiated with the same name in the /interface-state/interface list."
      operationId: "getInterfaceName"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces/{interface}/description:
    get:
      tags:
      - ietf-interfaces
      summary: "Leaf"
      description: "A server implementation MAY map this leaf to the ifAlias MIB object.  Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and ifAlias.The definition of such a mechanism is outside the scope of this document.\nSince ifAlias is defined to be stored in non-volatile storage, the MIB implementation MUST map ifAlias to the value of 'description' in the persistently stored configuration."
      operationId: "getInterfaceDescription"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      description:
                        type: "string"
                        example: This is interface 0/1
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces/{interface}/type:
    get:
      tags:
      - ietf-interfaces
      summary: "Leaf"
      description: "The type of the interface.\n\nWhen an interface entry is created, a server MAY initialize the type leaf with a valid value, e.g., if it is possible to derive the type from the name of the interface.\nIf a client tries to set the type of an interface to a value that can never be used by the system, e.g., if the type is not supported or if the type does not match the name of the interface, the server MUST reject the request. A NETCONF server MUST reply with an rpc-error with the error-tag 'invalid-value' in this case."
      operationId: "getInterfaceType"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      type:
                        $ref: '#/definitions/type'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces/{interface}/enabled:
    get:
      tags:
      - ietf-interfaces
      summary: "Leaf"
      description: "This leaf contains the configured, desired state of the interface.\n\nSystems that implement the IF-MIB use the value of this leaf in the intended configuration to set IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry has been initialized, as described in RFC 2863.\n\nChanges in this leaf in the intended configuration are reflected in ifAdminStatus."
      operationId: "getInterfaceEnabled"
      produces:
      - application/json
      parameters:
        - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      enabled:
                        $ref: '#/definitions/bool_t'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces/{interface}/link-up-down-trap-enable:
    get:
      tags:
      - ietf-interfaces
      summary: "Leaf"
      description: "Controls whether linkUp/linkDown SNMP notifications should be generated for this interface.\n\nIf this node is not configured, the value 'enabled' is operationally used by the server for interfaces that do not operate on top of any other interface (i.e., there are no 'lower-layer-if' entries), and 'disabled' otherwise."
      operationId: "getInterfaceLink"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      link-up-down-trap-enable:
                        $ref: '#/definitions/link-up-down-trap-enable'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Container"
      description: "Data nodes for the operational state of interfaces."
      operationId: "getInterfaceState"
      produces:
      - application/json
      responses:
        200:
          description: "OK, Ignore the response"
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}:
    get:
      tags:
      - ietf-interfaces-state
      summary: "List" 
      description: "The list of interfaces on the device.\n\nSystem-controlled interfaces created by the system are always present in this list, whether or not they are configured."
      operationId: "getInterfacesStateInterface"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      type:
                        $ref: '#/definitions/type'
                      admin-status:
                        $ref: '#/definitions/admin-status'
                      oper-status:
                        $ref: '#/definitions/oper-status'
                      if-index:
                        $ref: '#/definitions/if-index'
                      last-change:
                        $ref: '#/definitions/last-change'
                      phys-address:
                        $ref: '#/definitions/phys-address'
                      speed:
                        $ref: '#/definitions/speed'
                      statistics:
                        $ref: '#/definitions/statistics'
                      ietf-ip:ipv4:
                        $ref: '#/definitions/ietf-ip%3Aipv4_s'
                      ietf-ip:ipv6:
                        $ref: '#/definitions/ietf-ip%3Aipv4_s'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/name:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The name of the interface.\n\nA server implementation MAY map this leaf to the ifName MIB object.  Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and ifName.The definition of such a mechanism is outside the scope of this document."
      operationId: "getInterfacesStateName"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/type:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The type of the interface."
      operationId: "getInterfacesStateType"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      type: 
                        $ref: '#/definitions/type'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/admin-status:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The desired state of the interface.\n\nThis leaf has the same read semantics as ifAdminStatus."
      operationId: "getInterfacesStateAdminStatus"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      admin-status:
                        $ref: '#/definitions/admin-status'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/oper-status:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The current operational state of the interface.\n\nThis leaf has the same semantics as ifOperStatus."
      operationId: "getInterfacesStateOperStatus"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      oper-status:
                        $ref: '#/definitions/oper-status'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/last-change:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this node is not present."
      operationId: "getInterfacesStateLastChange"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      last-change:
                        $ref: '#/definitions/last-change'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/if-index:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The ifIndex value for the ifEntry represented by this interface."
      operationId: "getInterfacesStateIfIndex"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      if-index:
                        $ref: '#/definitions/if-index'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/phys-address:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The interface's address at its protocol sub-layer.\n\nFor example, for an 802.x interface, this object normally contains a Media Access Control (MAC) address.  The interface's media-specific modules must define the bit and byte ordering and the format of the value of this object.  For interfaces that do not have such an address(e.g., a serial line), this node is not present."
      operationId: "getInterfacesStatePhysAddress"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      phys-address:
                        $ref: '#/definitions/phys-address'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/speed:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "An estimate of the interface's current bandwidth in bits per second.  For interfaces that do not vary in bandwidth or for those where no accurate estimation can be made, this node should contain the nominal bandwidth. For interfaces that have no concept of bandwidth, this node is not present."
      operationId: "getInterfacesStateSpeed"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      speed:
                        $ref: '#/definitions/speed'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Container"
      description: "A collection of interface-related statistics objects."
      operationId: "getInterfacesStateStatistics"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        $ref: '#/definitions/statistics'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/discontinuity-time:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The time on the most recent occasion at which any one or more of this interface's counters suffered a discontinuity.  If no such discontinuities have occurred since the last re-initialization of the local management subsystem, then this node contains the time the local management subsystem re-initialized itself."
      operationId: "getInterfacesStateDiscontinuityTime"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          discontinuity-time:
                            $ref: '#/definitions/discontinuity-time'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/in-octets:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The total number of octets received on the interface, including framing characters.\n\nDiscontinuities in the value of this counter can occur at re-initialization of the management system and at other times as indicated by the value of 'discontinuity-time'."
      operationId: "getInterfacesStateInOctets"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          in-octets:
                            $ref: '#/definitions/in-octets'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/in-unicast-pkts:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The number of packets, delivered by this sub-layer to a higher (sub-)layer, that were not addressed to a multicast or broadcast address at this sub-layer.\nDiscontinuities in the value of this counter can occur at re-initialization of the management system and at other times as indicated by the value of 'discontinuity-time'."
      operationId: "getInterfacesStateInUnicastPkts"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          in-unicast-pkts:
                            $ref: '#/definitions/in-unicast-pkts'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/in-broadcast-pkts:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The number of packets, delivered by this sub-layer to a higher (sub-)layer, that were addressed to a broadcast address at this sub-layer.\n\nDiscontinuities in the value of this counter can occur at re-initialization of the management system and at other times as indicated by the value of 'discontinuity-time'."
      operationId: "getInterfacesStateInBroadcastPkts"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          in-broadcast-pkts:
                            $ref: '#/definitions/in-broadcast-pkts'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/in-multicast-pkts:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The number of packets, delivered by this sub-layer to a higher (sub-)layer, that were addressed to a multicast address at this sub-layer.  For a MAC-layer protocol, this includes both Group and Functional addresses.\n\nDiscontinuities in the value of this counter can occur at re-initialization of the management system and at other times as indicated by the value of 'discontinuity-time'."
      operationId: "getInterfacesStateInMulticastPkts"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          in-multicast-pkts:
                            $ref: '#/definitions/in-multicast-pkts'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/in-discards:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "The number of inbound packets that were chosen to be discarded even though no errors had been detected to prevent their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.\n\nDiscontinuities in the value of this counter can occur at re-initialization of the management system and at other times as indicated by the value of 'discontinuity-time'."
      operationId: "getInterfacesStateInDiscard"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          in-discards:
                            $ref: '#/definitions/in-discards'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/in-errors:
    get:
      tags:
      - ietf-interfaces-state
      summary: "Leaf"
      description: "the number of inbound packets that contained errors"
      operationId: "getInterfacesStateInErrors"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          in-errors:
                            $ref: '#/definitions/in-errors'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/out-octets:
    get:
      tags:
      - ietf-interfaces-state
      summary: ""
      description: "The total number of octets transmitted out of the interface"
      operationId: "getInterfacesStateOutOctets"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          out-octets:
                            $ref: '#/definitions/out-octets'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/out-unicast-pkts:
    get:
      tags:
      - ietf-interfaces-state
      summary: ""
      description: "The total number of packets that higher-level protocols requested be transmitted and that were not addressed to a multicast or broadcast address at this sub-layer"
      operationId: "getInterfacesStateOutUnicastPkts"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          out-unicast-pkts:
                            $ref: '#/definitions/out-unicast-pkts'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/out-broadcast-pkts:
    get:
      tags:
      - ietf-interfaces-state
      summary: ""
      description: "The total number of packets that higher-level protocols requested be transmitted and that were addressed to a broadcast address at this sub-layer"
      operationId: "getInterfacesStateOutBroadcastPkts"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          out-broadcast-pkts:
                            $ref: '#/definitions/out-broadcast-pkts'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/out-multicast-pkts:
    get:
      tags:
      - ietf-interfaces-state
      summary: ""
      description: "The total number of packets that higher-level protocols requested be transmitted and that were addressed to a multicast address at this sub-layer"
      operationId: "getInterfacesStateOutMulticastPkts"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          out-multicast-pkts:
                            $ref: '#/definitions/out-multicast-pkts'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/out-discards:
    get:
      tags:
      - ietf-interfaces-state
      summary: ""
      description: "The number of outbound packets that were chosen to be discarded"
      operationId: "getInterfacesStateOutDiscards"
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          out-discards:
                            $ref: '#/definitions/out-discards'
        400:
          description: "Bad Request"
  /ietf-interfaces:interfaces-state/{interface}/statistics/out-errors:
    get:
      tags:
      - ietf-interfaces-state
      summary: ""
      description: "the number of outbound packets that could not be transmitted because of errors"
      operationId: "getInterfacesStateOutErrors"
      produces: 
      - application/json
      parameters:
      - $ref: '#/parameters/interface'
      responses:
        200:
          description: OK
          schema:
            type: "object"
            properties:
              ietf-interfaces:interfaces-state:
                type: "object"
                properties:
                  interface:
                    type: "object"
                    properties:
                      name:
                        $ref: '#/definitions/name'
                      statistics:
                        type: "object"
                        properties:
                          out-errors:
                            $ref: '#/definitions/out-errors'
        400:
          description: "Bad Request"
parameters:
  interface:
    name: "interface"
    in: "path"
    description: "interface you want to get(ex: interface=0/1)"
    required: true
    type: "string"
    
definitions:
  bool_t:
    type: "boolean"
    example: true
  bool_f:
    type: "boolean"
    example: false
  name: 
    type: "string"
    example: 0/1
  type:
    type: "string"
    example: ianaift:ethernetCsmacd
  link-up-down-trap-enable:
    type: "string"
    example: enabled
  ietf-ip-ipv4:
    type: "object"
    properties:
      enabled:
        $ref: '#/definitions/bool_f'
      forwarding:
        $ref: '#/definitions/bool_f'
  ietf-ip-ipv6:
    type: "object"
    properties:
      enabled:
        $ref: '#/definitions/bool_f'
      forwarding:
        $ref: '#/definitions/bool_f'
      dup-addr-detect-transmits:
        type: "integer"
        example: 1
      autoconf:
        $ref: '#/definitions/autoconf'
  autoconf:
    type: "object"
    properties:
      creat-global-addresses:
        $ref: '#/definitions/bool_f'
  interface_put:
    type: "object"
    properties:
      name:
        $ref: '#/definitions/name'
      descrition:
        type: "string"
        example: Test
      type:
        $ref: '#/definitions/type'
      enabled:
        $ref: '#/definitions/bool_t'
      link-up-down-trap-enable:
        $ref: '#/definitions/link-up-down-trap-enable'
      ipv4:
        type: "object"
        properties:
          enabled:
            $ref: '#/definitions/bool_t'
          forwarding:
            $ref: '#/definitions/bool_t'
          mtu:
            type: "integer"
            example: 1280
      ipv6:
        type: "object"
        properties:
          enabled:
            $ref: '#/definitions/bool_t'
          forwarding:
            $ref: '#/definitions/bool_t'
          mtu:
            type: "integer"
            example: 1290
          dup-addr-detect-transmits:
            type: "integer"
            example: 1
          autoconf:
            $ref: '#/definitions/autoconf'
#------------interfaces-state----------------
  zero:
    type: "integer"
    example: 0
  admin-status:
    type: "string"
    example: down
  oper-status:
    type: "string"
    example: down
  if-index:
    type: "integer"
    example: 1
  last-change:
    type: string
    example: "1965-05-27T05:00:28Z"
  phys-address:
    type: "string"
    example: "D8:C4:97:56:86:2F"
  speed:
    type: "integer"
    example: 4294967295
  discontinuity-time:
    type: "string"
    example: "1965-05-26T07:23:24Z"
  in-octets:
    $ref: '#/definitions/zero'
  in-unicast-pkts:
    $ref: '#/definitions/zero'
  in-broadcast-pkts:
    $ref: '#/definitions/zero'
  in-multicast-pkts:
    $ref: '#/definitions/zero'
  in-discards:
    $ref: '#/definitions/zero'
  in-errors:
    $ref: '#/definitions/zero'
  in-unknown-protos:
    $ref: '#/definitions/zero'
  out-octets:
    $ref: '#/definitions/zero'
  out-unicast-pkts:
    $ref: '#/definitions/zero'
  out-broadcast-pkts:
    $ref: '#/definitions/zero'
  out-multicast-pkts:
    $ref: '#/definitions/zero'
  out-discards:
    $ref: '#/definitions/zero'
  out-errors:
    $ref: '#/definitions/zero'
  out-unknown-protos:
    $ref: '#/definitions/zero'
  ietf-ip:ipv4_s:
    type: "object"
    properties:
      forwarding:
        $ref: '#/definitions/bool_f'
      mtu:
        type: "integer"
        example: 1500
  statistics:
    type: "object"
    properties:
      discontinuity-time:
        $ref: '#/definitions/discontinuity-time'
      in-octets:
        $ref: '#/definitions/in-octets'
      in-unicast-pkts:
        $ref: '#/definitions/in-unicast-pkts'
      in-broadcast-pkts:
        $ref: '#/definitions/in-broadcast-pkts'
      in-multicast-pkts:
        $ref: '#/definitions/in-multicast-pkts'
      in-discards:
        $ref: '#/definitions/in-discards'
      in-errors:
        $ref: '#/definitions/in-errors'
      in-unknown-protos:
        $ref: '#/definitions/in-unknown-protos'
      out-octets:
        $ref: '#/definitions/out-octets'
      out-unicast-pkts:
        $ref: '#/definitions/out-unicast-pkts'
      out-broadcast-pkts:
        $ref: '#/definitions/out-broadcast-pkts'
      out-multicast-pkts:
        $ref: '#/definitions/out-multicast-pkts'
      out-discards:
        $ref: '#/definitions/out-discards'
      out-errors:
        $ref: '#/definitions/out-errors'
      out-unknown-protos:
        $ref: '#/definitions/out-unknown-protos'